// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/int128/gradleupdate/gateways/interfaces (interfaces: RepositoryError)

// Package mock_gateways is a generated GoMock package.
package mock_gateways

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepositoryError is a mock of RepositoryError interface
type MockRepositoryError struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryErrorMockRecorder
}

// MockRepositoryErrorMockRecorder is the mock recorder for MockRepositoryError
type MockRepositoryErrorMockRecorder struct {
	mock *MockRepositoryError
}

// NewMockRepositoryError creates a new mock instance
func NewMockRepositoryError(ctrl *gomock.Controller) *MockRepositoryError {
	mock := &MockRepositoryError{ctrl: ctrl}
	mock.recorder = &MockRepositoryErrorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepositoryError) EXPECT() *MockRepositoryErrorMockRecorder {
	return m.recorder
}

// Error mocks base method
func (m *MockRepositoryError) Error() string {
	ret := m.ctrl.Call(m, "Error")
	ret0, _ := ret[0].(string)
	return ret0
}

// Error indicates an expected call of Error
func (mr *MockRepositoryErrorMockRecorder) Error() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Error", reflect.TypeOf((*MockRepositoryError)(nil).Error))
}

// NoSuchEntity mocks base method
func (m *MockRepositoryError) NoSuchEntity() bool {
	ret := m.ctrl.Call(m, "NoSuchEntity")
	ret0, _ := ret[0].(bool)
	return ret0
}

// NoSuchEntity indicates an expected call of NoSuchEntity
func (mr *MockRepositoryErrorMockRecorder) NoSuchEntity() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NoSuchEntity", reflect.TypeOf((*MockRepositoryError)(nil).NoSuchEntity))
}
