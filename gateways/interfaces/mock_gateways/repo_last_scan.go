// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/int128/gradleupdate/gateways/interfaces (interfaces: RepositoryLastScanRepository)

// Package mock_gateways is a generated GoMock package.
package mock_gateways

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	domain "github.com/int128/gradleupdate/domain"
	reflect "reflect"
)

// MockRepositoryLastScanRepository is a mock of RepositoryLastScanRepository interface
type MockRepositoryLastScanRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryLastScanRepositoryMockRecorder
}

// MockRepositoryLastScanRepositoryMockRecorder is the mock recorder for MockRepositoryLastScanRepository
type MockRepositoryLastScanRepositoryMockRecorder struct {
	mock *MockRepositoryLastScanRepository
}

// NewMockRepositoryLastScanRepository creates a new mock instance
func NewMockRepositoryLastScanRepository(ctrl *gomock.Controller) *MockRepositoryLastScanRepository {
	mock := &MockRepositoryLastScanRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryLastScanRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepositoryLastScanRepository) EXPECT() *MockRepositoryLastScanRepositoryMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockRepositoryLastScanRepository) Save(arg0 context.Context, arg1 domain.RepositoryLastScan) error {
	ret := m.ctrl.Call(m, "Save", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockRepositoryLastScanRepositoryMockRecorder) Save(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockRepositoryLastScanRepository)(nil).Save), arg0, arg1)
}
