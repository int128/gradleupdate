// This file is automatically generated by qtc from "badge.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line badge.qtpl:1
package templates

//line badge.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line badge.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line badge.qtpl:1
func (b Badge) StreamSVG(qw422016 *qt422016.Writer) {
	//line badge.qtpl:1
	qw422016.N().S(`
<svg xmlns="http://www.w3.org/2000/svg" width="`)
	//line badge.qtpl:2
	qw422016.N().D(b.LeftWidth + b.RightWidth)
	//line badge.qtpl:2
	qw422016.N().S(`" height="20">
    <linearGradient id="b" x2="0" y2="100%">
        <stop offset="0" stop-color="#bbb" stop-opacity=".1"/>
        <stop offset="1" stop-opacity=".1"/>
    </linearGradient>
    <clipPath id="a">
        <rect width="`)
	//line badge.qtpl:8
	qw422016.N().D(b.LeftWidth + b.RightWidth)
	//line badge.qtpl:8
	qw422016.N().S(`" height="20" rx="3" fill="#fff"/>
    </clipPath>
    <g clip-path="url(#a)">
        <path fill="`)
	//line badge.qtpl:11
	qw422016.E().S(b.LeftFill)
	//line badge.qtpl:11
	qw422016.N().S(`" d="M0 0h`)
	//line badge.qtpl:11
	qw422016.N().D(b.LeftWidth)
	//line badge.qtpl:11
	qw422016.N().S(`v20H0z"/>
        <path fill="`)
	//line badge.qtpl:12
	qw422016.E().S(b.RightFill)
	//line badge.qtpl:12
	qw422016.N().S(`" d="M`)
	//line badge.qtpl:12
	qw422016.N().D(b.LeftWidth)
	//line badge.qtpl:12
	qw422016.N().S(` 0h`)
	//line badge.qtpl:12
	qw422016.N().D(b.RightWidth)
	//line badge.qtpl:12
	qw422016.N().S(`v20H`)
	//line badge.qtpl:12
	qw422016.N().D(b.LeftWidth)
	//line badge.qtpl:12
	qw422016.N().S(`z"/>
        <path fill="url(#b)" d="M0 0h`)
	//line badge.qtpl:13
	qw422016.N().D(b.LeftWidth + b.RightWidth)
	//line badge.qtpl:13
	qw422016.N().S(`v20H0z"/>
    </g>
    <g fill="#fff" text-anchor="middle" font-family="DejaVu Sans,Verdana,Geneva,sans-serif" font-size="11">
        <text x="`)
	//line badge.qtpl:16
	qw422016.N().D(b.LeftWidth / 2)
	//line badge.qtpl:16
	qw422016.N().S(`" y="15" fill="#010101" fill-opacity=".3">`)
	//line badge.qtpl:16
	qw422016.E().S(b.LeftText)
	//line badge.qtpl:16
	qw422016.N().S(`</text>
        <text x="`)
	//line badge.qtpl:17
	qw422016.N().D(b.LeftWidth / 2)
	//line badge.qtpl:17
	qw422016.N().S(`" y="14">`)
	//line badge.qtpl:17
	qw422016.E().S(b.LeftText)
	//line badge.qtpl:17
	qw422016.N().S(`</text>
        <text x="`)
	//line badge.qtpl:18
	qw422016.N().D(b.LeftWidth + b.RightWidth/2)
	//line badge.qtpl:18
	qw422016.N().S(`" y="15" fill="#010101" fill-opacity=".3">`)
	//line badge.qtpl:18
	qw422016.E().S(b.RightText)
	//line badge.qtpl:18
	qw422016.N().S(`</text>
        <text x="`)
	//line badge.qtpl:19
	qw422016.N().D(b.LeftWidth + b.RightWidth/2)
	//line badge.qtpl:19
	qw422016.N().S(`" y="14">`)
	//line badge.qtpl:19
	qw422016.E().S(b.RightText)
	//line badge.qtpl:19
	qw422016.N().S(`</text>
    </g>
</svg>
`)
//line badge.qtpl:22
}

//line badge.qtpl:22
func (b Badge) WriteSVG(qq422016 qtio422016.Writer) {
	//line badge.qtpl:22
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line badge.qtpl:22
	b.StreamSVG(qw422016)
	//line badge.qtpl:22
	qt422016.ReleaseWriter(qw422016)
//line badge.qtpl:22
}

//line badge.qtpl:22
func (b Badge) SVG() string {
	//line badge.qtpl:22
	qb422016 := qt422016.AcquireByteBuffer()
	//line badge.qtpl:22
	b.WriteSVG(qb422016)
	//line badge.qtpl:22
	qs422016 := string(qb422016.B)
	//line badge.qtpl:22
	qt422016.ReleaseByteBuffer(qb422016)
	//line badge.qtpl:22
	return qs422016
//line badge.qtpl:22
}
