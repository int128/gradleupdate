// This file is automatically generated by qtc from "repo.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line repo.qtpl:1
package templates

//line repo.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line repo.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line repo.qtpl:1
func (r Repository) StreamPage(qw422016 *qt422016.Writer) {
	//line repo.qtpl:1
	qw422016.N().S(`
<!DOCTYPE HTML>
<html>

<head>
  <title>`)
	//line repo.qtpl:6
	qw422016.E().S(r.Repository.ID.Owner)
	//line repo.qtpl:6
	qw422016.N().S(`/`)
	//line repo.qtpl:6
	qw422016.E().S(r.Repository.ID.Name)
	//line repo.qtpl:6
	qw422016.N().S(` - gradleupdate</title>
  `)
	//line repo.qtpl:7
	StreamStylesheets(qw422016)
	//line repo.qtpl:7
	qw422016.N().S(`
</head>
<body>

`)
	//line repo.qtpl:11
	StreamHeader(qw422016)
	//line repo.qtpl:11
	qw422016.N().S(`

<div class="container jumbotron text-center">
  <img src="`)
	//line repo.qtpl:14
	qw422016.E().S(r.Repository.AvatarURL)
	//line repo.qtpl:14
	qw422016.N().S(`" alt="avatar" width="96" height="96" class="img-thumbnail rounded-circle"/>
  <h2>`)
	//line repo.qtpl:15
	qw422016.E().S(r.Repository.ID.Owner)
	//line repo.qtpl:15
	qw422016.N().S(`/`)
	//line repo.qtpl:15
	qw422016.E().S(r.Repository.ID.Name)
	//line repo.qtpl:15
	qw422016.N().S(`</h2>
  <p class="lead">`)
	//line repo.qtpl:16
	qw422016.E().S(r.Repository.Description)
	//line repo.qtpl:16
	qw422016.N().S(`</p>
  <p><img src="`)
	//line repo.qtpl:17
	qw422016.E().S(r.BadgeURL)
	//line repo.qtpl:17
	qw422016.N().S(`" alt="badge"/></p>
</div>

<div class="container text-center">
  <p>You can add the status badge.</p>
  <form>
    <label class="text-uppercase" for="badge-markdown">Markdown:</label>
    <input type="text" id="badge-markdown" class="form-control text-monospace"
           value="[![Gradle Status](`)
	//line repo.qtpl:25
	qw422016.E().S(r.BaseURL)
	//line repo.qtpl:25
	qw422016.E().S(r.BadgeURL)
	//line repo.qtpl:25
	qw422016.N().S(`)](`)
	//line repo.qtpl:25
	qw422016.E().S(r.BaseURL)
	//line repo.qtpl:25
	qw422016.E().S(r.ThisURL)
	//line repo.qtpl:25
	qw422016.N().S(`)"/>
  </form>
  <div class="mb-3"></div>

`)
	//line repo.qtpl:29
	if r.UpToDate {
		//line repo.qtpl:29
		qw422016.N().S(`
  <p>Gradle is up-to-date.</p>
`)
		//line repo.qtpl:31
	} else {
		//line repo.qtpl:31
		qw422016.N().S(`
  <p>The repository has out-of-dated Gradle `)
		//line repo.qtpl:32
		qw422016.E().V(r.CurrentVersion)
		//line repo.qtpl:32
		qw422016.N().S(`.</p>
  <form method="POST" action="`)
		//line repo.qtpl:33
		qw422016.E().S(r.SendPullRequestURL)
		//line repo.qtpl:33
		qw422016.N().S(`">
    <p>
      <button type="submit" class="btn btn-primary">
        Send a Pull Request for Gradle `)
		//line repo.qtpl:36
		qw422016.E().V(r.LatestVersion)
		//line repo.qtpl:36
		qw422016.N().S(`
      </button>
    </p>
  </form>
`)
		//line repo.qtpl:40
	}
	//line repo.qtpl:40
	qw422016.N().S(`
</div>

`)
	//line repo.qtpl:43
	StreamFooter(qw422016)
	//line repo.qtpl:43
	qw422016.N().S(`

</body>
</html>
`)
//line repo.qtpl:47
}

//line repo.qtpl:47
func (r Repository) WritePage(qq422016 qtio422016.Writer) {
	//line repo.qtpl:47
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line repo.qtpl:47
	r.StreamPage(qw422016)
	//line repo.qtpl:47
	qt422016.ReleaseWriter(qw422016)
//line repo.qtpl:47
}

//line repo.qtpl:47
func (r Repository) Page() string {
	//line repo.qtpl:47
	qb422016 := qt422016.AcquireByteBuffer()
	//line repo.qtpl:47
	r.WritePage(qb422016)
	//line repo.qtpl:47
	qs422016 := string(qb422016.B)
	//line repo.qtpl:47
	qt422016.ReleaseByteBuffer(qb422016)
	//line repo.qtpl:47
	return qs422016
//line repo.qtpl:47
}
