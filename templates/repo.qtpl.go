// This file is automatically generated by qtc from "repo.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line repo.qtpl:1
package templates

//line repo.qtpl:1
import "github.com/int128/gradleupdate/domain/gradleupdate"

//line repo.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line repo.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line repo.qtpl:3
func (r Repository) StreamPage(qw422016 *qt422016.Writer, csrf string) {
	//line repo.qtpl:3
	qw422016.N().S(`
<!DOCTYPE HTML>
<html>

<head>
  <title>`)
	//line repo.qtpl:8
	qw422016.E().S(r.Repository.ID.Owner)
	//line repo.qtpl:8
	qw422016.N().S(`/`)
	//line repo.qtpl:8
	qw422016.E().S(r.Repository.ID.Name)
	//line repo.qtpl:8
	qw422016.N().S(` - gradleupdate</title>
  `)
	//line repo.qtpl:9
	StreamStylesheets(qw422016)
	//line repo.qtpl:9
	qw422016.N().S(`
</head>
<body>

`)
	//line repo.qtpl:13
	StreamHeader(qw422016)
	//line repo.qtpl:13
	qw422016.N().S(`

<div class="container">
  <div class="jumbotron text-center">
    <img src="`)
	//line repo.qtpl:17
	qw422016.E().S(r.Repository.AvatarURL)
	//line repo.qtpl:17
	qw422016.N().S(`" alt="avatar" width="96" height="96" class="img-thumbnail rounded-circle"/>
    <h2>`)
	//line repo.qtpl:18
	qw422016.E().S(r.Repository.ID.Owner)
	//line repo.qtpl:18
	qw422016.N().S(`/`)
	//line repo.qtpl:18
	qw422016.E().S(r.Repository.ID.Name)
	//line repo.qtpl:18
	qw422016.N().S(`</h2>
    <p class="lead">`)
	//line repo.qtpl:19
	qw422016.E().S(r.Repository.Description)
	//line repo.qtpl:19
	qw422016.N().S(`</p>
  </div>

  <div class="text-center">
    `)
	//line repo.qtpl:23
	switch r.UpdatePreconditionViolation {
	//line repo.qtpl:25
	case gradleupdate.ReadyToUpdate:
		//line repo.qtpl:25
		qw422016.N().S(`
    <h3>This repository has the out-of-dated Gradle.</h3>
    <p><img src="`)
		//line repo.qtpl:27
		qw422016.E().S(r.BadgeURL)
		//line repo.qtpl:27
		qw422016.N().S(`" alt="badge"/></p>

    `)
		//line repo.qtpl:29
		if r.UpdatePullRequestURL != "" {
			//line repo.qtpl:29
			qw422016.N().S(`
    <p>
      We have sent
      <a href="`)
			//line repo.qtpl:32
			qw422016.E().V(r.UpdatePullRequestURL)
			//line repo.qtpl:32
			qw422016.N().S(`" target="_blank">the pull request</a>
      for bump to Gradle `)
			//line repo.qtpl:33
			qw422016.E().V(r.LatestGradleRelease.Version)
			//line repo.qtpl:33
			qw422016.N().S(`.</p>
    `)
			//line repo.qtpl:34
		} else {
			//line repo.qtpl:34
			qw422016.N().S(`
    <p>We will soon send a pull request for bump to Gradle `)
			//line repo.qtpl:35
			qw422016.E().V(r.LatestGradleRelease.Version)
			//line repo.qtpl:35
			qw422016.N().S(`.</p>
    <form method="POST" action="`)
			//line repo.qtpl:36
			qw422016.E().S(r.RequestUpdateURL)
			//line repo.qtpl:36
			qw422016.N().S(`">
      <p>
        <button type="submit" class="btn btn-link">
          Request a Pull Request now
        </button>
      </p>
      `)
			//line repo.qtpl:42
			qw422016.N().S(csrf)
			//line repo.qtpl:42
			qw422016.N().S(`
    </form>
    `)
			//line repo.qtpl:44
		}
		//line repo.qtpl:44
		qw422016.N().S(`

    `)
	//line repo.qtpl:46
	case gradleupdate.AlreadyHasLatestGradle:
		//line repo.qtpl:46
		qw422016.N().S(`
    <h3>This repository has the latest Gradle!</h3>
    <p>We will send a pull request for updating version when the newer Gradle is released.</p>
    <p><img src="`)
		//line repo.qtpl:49
		qw422016.E().S(r.BadgeURL)
		//line repo.qtpl:49
		qw422016.N().S(`" alt="badge"/></p>

    `)
	//line repo.qtpl:51
	case gradleupdate.NoGradleWrapperProperties:
		//line repo.qtpl:51
		qw422016.N().S(`
    <p><strong>No Gradle:</strong> This repository does not have <code>gradle-wrapper.properties</code>.</p>

    `)
	//line repo.qtpl:54
	case gradleupdate.NoGradleVersion:
		//line repo.qtpl:54
		qw422016.N().S(`
    <p><strong>No Gradle:</strong> No version found in <code>gradle-wrapper.properties</code>.</p>

    `)
	//line repo.qtpl:57
	case gradleupdate.NoReadme:
		//line repo.qtpl:57
		qw422016.N().S(`
    <div class="alert alert-primary" role="alert">
      <strong>No Auto Update:</strong> You need to create README.
    </div>
    `)
		//line repo.qtpl:61
		r.StreamHowToAutoUpdate(qw422016)
		//line repo.qtpl:61
		qw422016.N().S(`

    `)
	//line repo.qtpl:63
	case gradleupdate.NoReadmeBadge:
		//line repo.qtpl:63
		qw422016.N().S(`
    <div class="alert alert-primary" role="alert">
      <strong>No Auto Update:</strong> You need to add the badge to README.
    </div>
    `)
		//line repo.qtpl:67
		r.StreamHowToAutoUpdate(qw422016)
		//line repo.qtpl:67
		qw422016.N().S(`

    `)
		//line repo.qtpl:69
	}
	//line repo.qtpl:69
	qw422016.N().S(`
  </div>
</div>

`)
	//line repo.qtpl:73
	StreamFooter(qw422016)
	//line repo.qtpl:73
	qw422016.N().S(`

</body>
</html>
`)
//line repo.qtpl:77
}

//line repo.qtpl:77
func (r Repository) WritePage(qq422016 qtio422016.Writer, csrf string) {
	//line repo.qtpl:77
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line repo.qtpl:77
	r.StreamPage(qw422016, csrf)
	//line repo.qtpl:77
	qt422016.ReleaseWriter(qw422016)
//line repo.qtpl:77
}

//line repo.qtpl:77
func (r Repository) Page(csrf string) string {
	//line repo.qtpl:77
	qb422016 := qt422016.AcquireByteBuffer()
	//line repo.qtpl:77
	r.WritePage(qb422016, csrf)
	//line repo.qtpl:77
	qs422016 := string(qb422016.B)
	//line repo.qtpl:77
	qt422016.ReleaseByteBuffer(qb422016)
	//line repo.qtpl:77
	return qs422016
//line repo.qtpl:77
}

//line repo.qtpl:79
func (r Repository) StreamHowToAutoUpdate(qw422016 *qt422016.Writer) {
	//line repo.qtpl:79
	qw422016.N().S(`
<div>
  <h3>How to turn on Auto Update?</h3>
  <p>
    Add the badge to README in the repository.
    We will send a pull request with the latest version of Gradle.
  </p>
  <p><img src="`)
	//line repo.qtpl:86
	qw422016.E().S(r.BadgeURL)
	//line repo.qtpl:86
	qw422016.N().S(`" alt="badge"/></p>
  <form>
    <div class="form-group">
      <label for="badge-markdown" class="font-weight-bold">Markdown:</label>
      <input type="text" id="badge-markdown" class="form-control text-monospace" value="`)
	//line repo.qtpl:90
	qw422016.E().S(r.BadgeMarkdown)
	//line repo.qtpl:90
	qw422016.N().S(`"/>
    </div>
    <div class="form-group">
      <label for="badge-html" class="font-weight-bold">HTML:</label>
      <input type="text" id="badge-html" class="form-control text-monospace" value="`)
	//line repo.qtpl:94
	qw422016.E().S(r.BadgeHTML)
	//line repo.qtpl:94
	qw422016.N().S(`"/>
    </div>
    <div class="form-group">
      <a href="`)
	//line repo.qtpl:97
	qw422016.E().S(r.Repository.URL)
	//line repo.qtpl:97
	qw422016.N().S(`" target="_blank" class="btn btn-primary">Open GitHub</a>
    </div>
  </form>
</div>
`)
//line repo.qtpl:101
}

//line repo.qtpl:101
func (r Repository) WriteHowToAutoUpdate(qq422016 qtio422016.Writer) {
	//line repo.qtpl:101
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line repo.qtpl:101
	r.StreamHowToAutoUpdate(qw422016)
	//line repo.qtpl:101
	qt422016.ReleaseWriter(qw422016)
//line repo.qtpl:101
}

//line repo.qtpl:101
func (r Repository) HowToAutoUpdate() string {
	//line repo.qtpl:101
	qb422016 := qt422016.AcquireByteBuffer()
	//line repo.qtpl:101
	r.WriteHowToAutoUpdate(qb422016)
	//line repo.qtpl:101
	qs422016 := string(qb422016.B)
	//line repo.qtpl:101
	qt422016.ReleaseByteBuffer(qb422016)
	//line repo.qtpl:101
	return qs422016
//line repo.qtpl:101
}
